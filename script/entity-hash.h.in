#!/usr/bin/perl
use strict;
use warnings;

my $hashsize = 0x80;
my @coeff = (155, 74, 6, 22, 156, 239, 144, 4, 97, 156);
my $coeffi = $#coeff;

sub compute_hash
{
  my $s = shift;
  my $hash = 0;
  $hash ^= ord(substr $s, $_, 1) + $coeff[$_] foreach (0 .. (length $s) - 1);
  return $hash % $hashsize;
}

print <<EOF
#include <wchar.h>
#ifndef ENTITY_HASH_H
#define ENTITY_HASH_H

EOF
;
printf "#define hash_coeff_count %d\n", ($coeffi + 1);
printf "static const int hash_coeff[%d] = { ", ($coeffi + 1);
print "$coeff[$_], " foreach (0 .. $coeffi-2);
print "$coeff[$coeffi] };\n";

my %hashtable;
$hashtable{$_} = -1 foreach (0 .. $hashsize-1);

printf 
  "#define hash_size 0x%x\n" .
  "static const int entity_hash[hash_size] = { ",
  $hashsize;

my $i = 0;
while(<>)
{
  next if /^\|/;
  chop;
  my ($name, $value, $str) = split /\t/;
  my $hash = compute_hash $name;
  $hashtable{$hash} = $i++;
}
print "$hashtable{$_}, " foreach (0 .. $hashsize - 2);
print <<EOF
$hashtable{$hashsize - 1} };

#endif
EOF
;

# vim:ts=2 sw=2 et ft=perl
